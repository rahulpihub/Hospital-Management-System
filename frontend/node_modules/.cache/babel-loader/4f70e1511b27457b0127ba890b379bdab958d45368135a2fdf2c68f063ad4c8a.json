{"ast":null,"code":"var _jsxFileName = \"R:\\\\ihub\\\\Work\\\\2025\\\\Jan\\\\Hospital-Management-System\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [message, setMessage] = useState('Loading...');\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Fetch data from the Django backend\n    axios.get('http://127.0.0.1:8000') // Make sure this is correct and the Django server is running\n    .then(response => {\n      setMessage(response.data.message || 'No message found'); // If response doesn't have a message field\n    }).catch(error => {\n      setError('Error fetching data from the server');\n      console.error('Error:', error); // Log error to the console for debugging\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginTop: '50px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: error ? error : message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/2k3vVOjzUJnBldr0NEEelb7Z5Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","App","_s","message","setMessage","error","setError","get","then","response","data","catch","console","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["R:/ihub/Work/2025/Jan/Hospital-Management-System/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction App() {\r\n  const [message, setMessage] = useState('Loading...');\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch data from the Django backend\r\n    axios.get('http://127.0.0.1:8000') // Make sure this is correct and the Django server is running\r\n      .then((response) => {\r\n        setMessage(response.data.message || 'No message found'); // If response doesn't have a message field\r\n      })\r\n      .catch((error) => {\r\n        setError('Error fetching data from the server');\r\n        console.error('Error:', error); // Log error to the console for debugging\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center', marginTop: '50px' }}>\r\n      <h1>{error ? error : message}</h1>\r\n      {/* If there's an error, display the error message, otherwise show the message */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,YAAY,CAAC;EACpD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd;IACAE,KAAK,CAACS,GAAG,CAAC,uBAAuB,CAAC,CAAC;IAAA,CAChCC,IAAI,CAAEC,QAAQ,IAAK;MAClBL,UAAU,CAACK,QAAQ,CAACC,IAAI,CAACP,OAAO,IAAI,kBAAkB,CAAC,CAAC,CAAC;IAC3D,CAAC,CAAC,CACDQ,KAAK,CAAEN,KAAK,IAAK;MAChBC,QAAQ,CAAC,qCAAqC,CAAC;MAC/CM,OAAO,CAACP,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKa,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,eACrDhB,OAAA;MAAAgB,QAAA,EAAKX,KAAK,GAAGA,KAAK,GAAGF;IAAO;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE/B,CAAC;AAEV;AAAClB,EAAA,CAtBQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAwBZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}