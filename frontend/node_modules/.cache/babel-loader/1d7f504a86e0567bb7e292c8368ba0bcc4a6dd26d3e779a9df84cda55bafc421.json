{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\student\\\\Desktop\\\\Rahul\\\\Hospital-Management-System\\\\frontend\\\\src\\\\resetpassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPassword() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n\n  // Handle input changes\n  const handleEmailChange = e => setEmail(e.target.value);\n  const handleNewPasswordChange = e => setNewPassword(e.target.value);\n  const handleConfirmPasswordChange = e => setConfirmPassword(e.target.value);\n\n  // Password validation logic\n  const isPasswordValid = password => {\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n    return passwordRegex.test(password);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!email || !newPassword || !confirmPassword) {\n      setError('All fields are required');\n      return;\n    }\n    if (newPassword !== confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n    if (!isPasswordValid(newPassword)) {\n      setError('Password must include uppercase, lowercase, number, special character, and be at least 8 characters long');\n      return;\n    }\n    try {\n      const response = await axios.post('http://127.0.0.1:8000/api/reset-password', {\n        email,\n        newPassword\n      });\n      if (response.data.success) {\n        setMessage('Password reset successfully');\n        setError('');\n      } else {\n        setError(response.data.message || 'Error resetting password');\n        setMessage('');\n      }\n    } catch (err) {\n      console.error('Error during password reset:', err);\n      setError('Error during password reset. Please try again.');\n      setMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: styles.header,\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: styles.form,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Enter your email\",\n        value: email,\n        onChange: handleEmailChange,\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"newPassword\",\n        placeholder: \"Enter new password\",\n        value: newPassword,\n        onChange: handleNewPasswordChange,\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"confirmPassword\",\n        placeholder: \"Confirm new password\",\n        value: confirmPassword,\n        onChange: handleConfirmPasswordChange,\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: styles.button,\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: styles.successMessage,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: styles.errorMessage,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n// Styles for the component\n_s(ResetPassword, \"zyozNO2ANo2KSwhq8iY+cVrySM0=\");\n_c = ResetPassword;\nconst styles = {\n  container: {\n    marginTop: '50px',\n    textAlign: 'center',\n    fontFamily: 'Arial, sans-serif',\n    backgroundColor: '#F3F3F3',\n    padding: '20px',\n    borderRadius: '8px',\n    maxWidth: '400px',\n    margin: 'auto',\n    boxShadow: '0 2px 10px rgba(0, 0, 0, 0.1)'\n  },\n  header: {\n    color: '#333',\n    marginBottom: '20px',\n    fontWeight: 'bold',\n    fontSize: '28px'\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  input: {\n    padding: '12px 20px',\n    margin: '10px 0',\n    width: '80%',\n    fontSize: '16px',\n    borderRadius: '4px',\n    border: '1px solid #ddd',\n    backgroundColor: '#fff',\n    outline: 'none',\n    transition: 'border-color 0.3s ease'\n  },\n  button: {\n    backgroundColor: '#FF9900',\n    color: '#fff',\n    border: 'none',\n    padding: '12px 30px',\n    borderRadius: '4px',\n    fontSize: '16px',\n    cursor: 'pointer',\n    transition: 'background-color 0.3s ease',\n    marginTop: '20px'\n  },\n  successMessage: {\n    color: 'green',\n    fontSize: '16px',\n    marginTop: '20px'\n  },\n  errorMessage: {\n    color: 'red',\n    fontSize: '16px',\n    marginTop: '20px'\n  }\n};\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ResetPassword","_s","email","setEmail","newPassword","setNewPassword","confirmPassword","setConfirmPassword","message","setMessage","error","setError","handleEmailChange","e","target","value","handleNewPasswordChange","handleConfirmPasswordChange","isPasswordValid","password","passwordRegex","test","handleSubmit","preventDefault","response","post","data","success","err","console","style","styles","container","children","header","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","form","type","name","placeholder","onChange","input","button","successMessage","errorMessage","_c","marginTop","textAlign","fontFamily","backgroundColor","padding","borderRadius","maxWidth","margin","boxShadow","color","marginBottom","fontWeight","fontSize","display","flexDirection","alignItems","width","border","outline","transition","cursor","$RefreshReg$"],"sources":["C:/Users/student/Desktop/Rahul/Hospital-Management-System/frontend/src/resetpassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction ResetPassword() {\r\n  const [email, setEmail] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  // Handle input changes\r\n  const handleEmailChange = (e) => setEmail(e.target.value);\r\n  const handleNewPasswordChange = (e) => setNewPassword(e.target.value);\r\n  const handleConfirmPasswordChange = (e) => setConfirmPassword(e.target.value);\r\n\r\n  // Password validation logic\r\n  const isPasswordValid = (password) => {\r\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\r\n    return passwordRegex.test(password);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!email || !newPassword || !confirmPassword) {\r\n      setError('All fields are required');\r\n      return;\r\n    }\r\n\r\n    if (newPassword !== confirmPassword) {\r\n      setError('Passwords do not match');\r\n      return;\r\n    }\r\n\r\n    if (!isPasswordValid(newPassword)) {\r\n      setError('Password must include uppercase, lowercase, number, special character, and be at least 8 characters long');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('http://127.0.0.1:8000/api/reset-password', {\r\n        email,\r\n        newPassword,\r\n      });\r\n      \r\n      if (response.data.success) {\r\n        setMessage('Password reset successfully');\r\n        setError('');\r\n      } else {\r\n        setError(response.data.message || 'Error resetting password');\r\n        setMessage('');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error during password reset:', err);\r\n      setError('Error during password reset. Please try again.');\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <h1 style={styles.header}>Reset Password</h1>\r\n      <form onSubmit={handleSubmit} style={styles.form}>\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Enter your email\"\r\n          value={email}\r\n          onChange={handleEmailChange}\r\n          style={styles.input}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"newPassword\"\r\n          placeholder=\"Enter new password\"\r\n          value={newPassword}\r\n          onChange={handleNewPasswordChange}\r\n          style={styles.input}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"confirmPassword\"\r\n          placeholder=\"Confirm new password\"\r\n          value={confirmPassword}\r\n          onChange={handleConfirmPasswordChange}\r\n          style={styles.input}\r\n        />\r\n        <button type=\"submit\" style={styles.button}>Reset Password</button>\r\n      </form>\r\n      {message && <p style={styles.successMessage}>{message}</p>}\r\n      {error && <p style={styles.errorMessage}>{error}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Styles for the component\r\nconst styles = {\r\n  container: {\r\n    marginTop: '50px',\r\n    textAlign: 'center',\r\n    fontFamily: 'Arial, sans-serif',\r\n    backgroundColor: '#F3F3F3',\r\n    padding: '20px',\r\n    borderRadius: '8px',\r\n    maxWidth: '400px',\r\n    margin: 'auto',\r\n    boxShadow: '0 2px 10px rgba(0, 0, 0, 0.1)',\r\n  },\r\n  header: {\r\n    color: '#333',\r\n    marginBottom: '20px',\r\n    fontWeight: 'bold',\r\n    fontSize: '28px',\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  input: {\r\n    padding: '12px 20px',\r\n    margin: '10px 0',\r\n    width: '80%',\r\n    fontSize: '16px',\r\n    borderRadius: '4px',\r\n    border: '1px solid #ddd',\r\n    backgroundColor: '#fff',\r\n    outline: 'none',\r\n    transition: 'border-color 0.3s ease',\r\n  },\r\n  button: {\r\n    backgroundColor: '#FF9900',\r\n    color: '#fff',\r\n    border: 'none',\r\n    padding: '12px 30px',\r\n    borderRadius: '4px',\r\n    fontSize: '16px',\r\n    cursor: 'pointer',\r\n    transition: 'background-color 0.3s ease',\r\n    marginTop: '20px',\r\n  },\r\n  successMessage: {\r\n    color: 'green',\r\n    fontSize: '16px',\r\n    marginTop: '20px',\r\n  },\r\n  errorMessage: {\r\n    color: 'red',\r\n    fontSize: '16px',\r\n    marginTop: '20px',\r\n  },\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}